rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(153, 25,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(153, 25,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(166, 27,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(166, 27,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(0, 27,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 100, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 193,69, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 100, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 130, names = "blue50"),
rgb(255, 102, 25, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 130, names = "blue50"),
rgb(255, 185, 64, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 130, names = "blue50"),
rgb(235, 164, 73, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 130, names = "blue50"),
rgb(255, 126, 73, max = 255, alpha = 100, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(255, 227,115, max = 255, alpha = 130, names = "blue50"),
rgb(255, 126, 73, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(59, 122,87, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(201, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(190, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(128, 33,0 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(128, 0,20 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(128, 0,20 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(30, 179,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(128, 0,40 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
partition.tree(tree.credit, label = "", add = FALSE, cex= 1.5)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE, cex= 1.5)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE, cex= 1.2)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(64, 128,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(128, 0,40 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE, cex= 1.2)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
mycol <- c(rgb(64, 128,0, max = 255, alpha = 130, names = "blue50"),
rgb(255, 227,115, max = 255, alpha = 130, names = "green50"),
rgb(255, 0, 0, max = 255, alpha = 100, names = "red"),
rgb(0, 85,225 , max = 255, alpha = 130, names = "yellow50"))
{
plot(tree.credit)
text(tree.credit, cex=0.8)
partition.tree(tree.credit, label = "", add = FALSE, cex= 1.2)
points(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"), pch = 16, col = mycol, bty = "n")
}
plot(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat])
legend("bottomright", title = "Income",
legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"),
pch = 16, col = mycol, bty = "n")
plot(Credit$Rating,Credit$Balance, pch = 16, col = mycol[cat],
xlab = "Rating", ylab = "Balance")
legend("bottomright", title = "Income",
legend = c("0 - 21", "21 - 33", "33 - 57","57 - 186"),
pch = 16, col = mycol, bty = "n")
plot(tree.credit)
text(tree.credit, cex=0.8)
require(automap)
install.packages("automap")
?gridded
install.packages("gridded")
require(automap)
data(meuse)
coordinates(meuse) = ~x + y
coordinates(meuse)
data(meuse.grid)
gridded(meuse.grid) = ~x + y
autoKrige(zinc ~ soil + ffreq + dist, meuse, meuse.grid)
library(MODISTools)
MODISSubsets(LoadDat = PREDICTS,
Products = "MOD13Q1",
Bands = c("250m_16_days_EVI",
"250m_16_days_VI_Quality"),
Size = c(3,3),StartDate = FALSE, TimeSeriesLength = 1)
# Set forecast parameters for API request
type    = c("forecast","history")
loc     = "-33.9345,18.4771"
a.hrs   = "24"
keys    = c("D93BEE3MG1DDV9HFKD4TDZ2B3","PZSMCLY0TV8WDVR85EKPBLMYQ",
"94PTQDZ21VSDMHHT2XVFJK40U", "EBAR2HSG4KACLUX2B3E8XEHXU",
"YGRJRH8DV62KZ7MAW43SQL900", "EAPTA3QB308L41LWVE35DYEYL",
"HA5E9345NW0XENSZCQC5RY4WT")
# Forecast
URL     = paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/",
type[1], "?location=", loc, "&aggregateHours=", a.hrs,
"&unitGroup=metric&shortColumnNames=false&contentType=json&key=", keys[1], sep = "")
request = GET(URL)
{
library(request)
library(jsonlite)
library(httr)
library(zoo)
library(pastecs)
library(data.table)
library(corrplot)
}
# Forecast
URL     = paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/",
type[1], "?location=", loc, "&aggregateHours=", a.hrs,
"&unitGroup=metric&shortColumnNames=false&contentType=json&key=", keys[1], sep = "")
request = GET(URL)
(data   = fromJSON(rawToChar(request$content))$locations$'-33.9345,18.4771'$values)
# Historical --------
date()
date()-7
date()
# Historical --------
today       = date()
endDate     = today-7 # yyyy-mm-ddT00:00:00
today
format(today, format="%Y-%m-%d")
# Historical --------
today       = date(format="%Y-%m-%d")
# Historical --------
today       = date(,format="%Y-%m-%d")
# Historical --------
today       = date()
today       = format(today, format="%Y-%m-%d")
today
as.Date(today)-7
# Historical --------
today       = date()
date()
# Historical --------
today       = system.time()
# Historical --------
today       = Sys.Date()
today
# Historical --------
(today       = Sys.Date())
endDate     = today-7 # yyyy-mm-ddT00:00:00
endDate
# Historical --------
(startDate       = Sys.Date()-7)
# startDate   = date() # yyyy-mm-ddT00:00:00
(endDate     = Sys.Date()) # yyyy-mm-ddT00:00:00
URL         = paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/",
type[2], "?&aggregateHours=", a.hrs, "&startDateTime=", startDate, "&endDateTime=", endDate,
"&unitGroup=metric&contentType=csv&dayStartTime=0:0:00&dayEndTime=0:0:00&location=", loc, "&key=", keys[1], sep = "")
(historical  = read.csv(URL))
(forecast   = fromJSON(rawToChar(request$content))$locations$'-33.9345,18.4771'$values)
str(historical)
forecast
forecast$datetimeStr = as.Date(data$datetimeStr)
forecast$conditions  = as.factor(data$conditions)
# Clean data
str(forecast)
forecast = forecast[,c("datetimeStr",
"mint", "maxt", "humidity", "precip",
"wspd", "wdir")]
plot(forecast)
rename(forecast, date = datetimeStr)
library(dplyr)
rename(forecast, date = datetimeStr)
(forecast   = fromJSON(rawToChar(request$content))$locations$'-33.9345,18.4771'$values)
# Clean data
str(forecast)
forecast$datetimeStr = as.Date(data$datetimeStr)
names(forecast)
forecast = forecast[,c("datetimeStr",
"mint", "maxt", "humidity", "precip",
"wspd", "wdir")]
rename(forecast, date = datetimeStr)
rename(forecast, min_temp = mint)
rename(forecast, max_temp = maxt)
rename(forecast, humid = humidity)
rename(forecast, rain = precip)
rename(forecast, wind_speed = wspd)
rename(forecast, wind_dir = wdir)
forecast
forecast = forecast %>% rename(forecast, date = datetimeStr)
forecast = forecast %>% rename(forecast, "date" = "datetimeStr")
forecast = forecast %>% rename(date = datetimeStr)
forecast
(forecast   = fromJSON(rawToChar(request$content))$locations$'-33.9345,18.4771'$values)
# Clean data
forecast$datetimeStr = as.Date(data$datetimeStr)
forecast = forecast[,c("datetimeStr",
"mint", "maxt", "humidity", "precip",
"wspd", "wdir")]
forecast = forecast %>% rename(date = datetimeStr, min_temp = mint)
forecast
(forecast   = fromJSON(rawToChar(request$content))$locations$'-33.9345,18.4771'$values)
# Clean data
forecast$datetimeStr = as.Date(data$datetimeStr)
forecast = forecast[,c("datetimeStr",
"mint", "maxt", "humidity", "precip",
"wspd", "wdir")]
forecast = forecast %>% rename(date = datetimeStr, min_temp = mint,
max_temp = maxt, humid = humidity,
rain = precip, wind_speed = wspd,
wind_dir = wdir)
forecast
historical
# Clean data
names(historical)
historical$Date.time = as.Date(historical$Date.time)
# Clean data
names(historical)
historical$Date.time = as.Date(historical$Date.time)
historical = historical[,c("Date.time",
"Minimum.Temperature", "Maximum.Temperature", "Relative.Humidity",
"Precipitation", "Wind.Speed", "Wind.Direction")]
historical = historical %>% rename(date = Date.time, min_temp = Minimum.Temperature,
max_temp = Maximum.Temperature, humid = Relative.Humidity,
rain = Precipitation, wind_speed = Wind.Speed,
wind_dir = Wind.Direction)
historical
# Clean data
names(historical)
(historical  = read.csv(URL))
request_history = historical
# Clean data
names(request_history)
request_history$Date.time
as.Date(historical$Date.time)
as.Date(historical$Date.time, format = "%d/%m/%Y")
as.Date(request_history$Date.time, format = "%d/%m/%Y")
request_history$Date.time
as.Date(request_history$Date.time, format = "%d/%m/%Y")
as.Date(request_history$Date.time[2], format = "%d/%m/%Y")
request_history$Date.time[2]
as.Date(request_history$Date.time, format = "%m/%d/%Y")
request_history$Date.time = as.Date(request_history$Date.time, format = "%m/%d/%Y")
historical = request_history[,c("Date.time",
"Minimum.Temperature", "Maximum.Temperature", "Relative.Humidity",
"Precipitation", "Wind.Speed", "Wind.Direction")]
historical = historical %>% rename(date = Date.time, min_temp = Minimum.Temperature,
max_temp = Maximum.Temperature, humid = Relative.Humidity,
rain = Precipitation, wind_speed = Wind.Speed,
wind_dir = Wind.Direction)
historical
forecast
# Forecast --------
request_future     = GET(paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?location=-33.9345,18.4771&aggregateHours=24&unitGroup=metric&shortColumnNames=false&contentType=json&key=", keys[1], sep = ""))
request_future
(forecast   = fromJSON(rawToChar(request_future$content))$locations$'-33.9345,18.4771'$values)
startDate   = Sys.Date()-7
endDate     = Sys.Date() # yyyy-mm-ddT00:00:00
request_history   = read.csv(paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?&aggregateHours=24&startDateTime=", startDate, "&endDateTime=", endDate,
"&unitGroup=metric&contentType=csv&dayStartTime=0:0:00&dayEndTime=0:0:00&location=-33.9345,18.4771&key=", keys[1], sep = ""))
request_history
historical
forecast
startDate         = Sys.Date()-7
endDate           = Sys.Date() # yyyy-mm-ddT00:00:00
request_history   = read.csv(paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?&aggregateHours=24&startDateTime=", startDate, "&endDateTime=", endDate,
"&unitGroup=metric&contentType=csv&dayStartTime=0:0:00&dayEndTime=0:0:00&location=-33.9345,18.4771&key=", keys[1], sep = ""))
request_history$Date.time = as.Date(request_history$Date.time, format = "%m/%d/%Y")
historical = request_history[,c("Date.time",
"Minimum.Temperature", "Maximum.Temperature", "Relative.Humidity",
"Precipitation", "Wind.Speed", "Wind.Direction")]
historical = historical %>% rename(date = Date.time, min_temp = Minimum.Temperature,
max_temp = Maximum.Temperature, humid = Relative.Humidity,
rain = Precipitation, wind_speed = Wind.Speed,
wind_dir = Wind.Direction)
historical
forecast
forecast$datetimeStr = as.Date(forecast$datetimeStr)
forecast = forecast[,c("datetimeStr",
"mint", "maxt", "humidity", "precip",
"wspd", "wdir")]
forecast = forecast %>% rename(date = datetimeStr, min_temp = mint,
max_temp = maxt, humid = humidity,
rain = precip, wind_speed = wspd,
wind_dir = wdir)
forecast
historical
APIdata    =  rbind(historical, forecast[2:8])
APIdata    =  rbind(historical, forecast[2:8,])
APIdata
APIdata    =  as.data.frame(rbind(historical, forecast[2:8,]))
APIdata
historical[2:8,]
APIdata    =  as.data.frame(rbind(historical[2:8,], forecast[2:8,]))
APIdata
APIrequest = function(){
keys     = c("D93BEE3MG1DDV9HFKD4TDZ2B3","PZSMCLY0TV8WDVR85EKPBLMYQ", "94PTQDZ21VSDMHHT2XVFJK40U", "EBAR2HSG4KACLUX2B3E8XEHXU",
"YGRJRH8DV62KZ7MAW43SQL900", "EAPTA3QB308L41LWVE35DYEYL", "HA5E9345NW0XENSZCQC5RY4WT")
# Forecast --------
request_future     = GET(paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?location=-33.9345,18.4771&aggregateHours=24&unitGroup=metric&shortColumnNames=false&contentType=json&key=", keys[1], sep = ""))
(forecast          = fromJSON(rawToChar(request_future$content))$locations$'-33.9345,18.4771'$values)
forecast$datetimeStr = as.Date(forecast$datetimeStr)
forecast = forecast[,c("datetimeStr", "mint", "maxt", "humidity", "precip","wspd", "wdir")]
forecast = forecast %>% rename(date = datetimeStr, min_temp = mint, max_temp = maxt, humid = humidity, rain = precip, wind_speed = wspd, wind_dir = wdir)
# Historical --------
startDate         = Sys.Date()-7
endDate           = Sys.Date()
request_history   = read.csv(paste("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?&aggregateHours=24&startDateTime=", startDate, "&endDateTime=", endDate,
"&unitGroup=metric&contentType=csv&dayStartTime=0:0:00&dayEndTime=0:0:00&location=-33.9345,18.4771&key=", keys[1], sep = ""))
request_history$Date.time = as.Date(request_history$Date.time, format = "%m/%d/%Y")
historical = request_history[,c("Date.time", "Minimum.Temperature", "Maximum.Temperature", "Relative.Humidity", "Precipitation", "Wind.Speed", "Wind.Direction")]
historical = historical %>% rename(date = Date.time, min_temp = Minimum.Temperature, max_temp = Maximum.Temperature, humid = Relative.Humidity, rain = Precipitation, wind_speed = Wind.Speed, wind_dir = Wind.Direction)
# Combined --------
return(as.data.frame(rbind(historical[2:8,], forecast[2:8,])))
}
setwd("/Users/chloestipinovich/Documents/2020/Thesis Project/grass-pollen")
source(data_scraping.R)
setwd("/Users/chloestipinovich/Documents/2020/Thesis Project/grass-pollen/Data_Engineering")
source(data_scraping.R)
source("data_scraping.R")
